out_hottorch.Size([87, 443, 105])
out1tensor([[ 0.0326,  0.0115,  0.0110,  ...,  0.0114,  0.0115,  0.0116],
        [ 0.0072,  0.0115,  0.0042,  ...,  0.0115,  0.0115,  0.0116],
        [ 0.0035,  0.0115,  0.0008,  ...,  0.0115,  0.0115,  0.0115],
        ...,
        [ 0.0134,  0.0115,  0.0068,  ...,  0.0114,  0.0116,  0.0115],
        [ 0.0007,  0.0115,  0.0006,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0002,  0.0115,  0.0034,  ...,  0.0115,  0.0115,  0.0115]])
out_hottorch.Size([87, 443, 105])
out1tensor([[ 0.0170,  0.0115,  0.0081,  ...,  0.0115,  0.0114,  0.0115],
        [ 0.0030,  0.0115,  0.0183,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0016,  0.0115,  0.0133,  ...,  0.0115,  0.0115,  0.0115],
        ...,
        [ 0.0098,  0.0115,  0.0006,  ...,  0.0115,  0.0115,  0.0116],
        [ 0.0108,  0.0115,  0.0030,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0116,  0.0115,  0.0094,  ...,  0.0115,  0.0115,  0.0115]])
out_hottorch.Size([87, 443, 105])
out1tensor([[ 0.0035,  0.0115,  0.0125,  ...,  0.0115,  0.0114,  0.0116],
        [ 0.0021,  0.0115,  0.0035,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0057,  0.0115,  0.0138,  ...,  0.0115,  0.0115,  0.0115],
        ...,
        [ 0.0087,  0.0115,  0.0037,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0156,  0.0115,  0.0087,  ...,  0.0115,  0.0116,  0.0115],
        [ 0.0291,  0.0115,  0.0040,  ...,  0.0115,  0.0115,  0.0115]])
out_hottorch.Size([87, 443, 105])
out1tensor([[ 0.0098,  0.0115,  0.0055,  ...,  0.0115,  0.0114,  0.0115],
        [ 0.0066,  0.0115,  0.0066,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0039,  0.0115,  0.0029,  ...,  0.0114,  0.0115,  0.0115],
        ...,
        [ 0.0055,  0.0115,  0.0010,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0011,  0.0115,  0.0024,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0297,  0.0115,  0.0236,  ...,  0.0115,  0.0115,  0.0114]])
out_hottorch.Size([87, 443, 105])
out1tensor([[ 0.0015,  0.0115,  0.0088,  ...,  0.0115,  0.0114,  0.0115],
        [ 0.1414,  0.0115,  0.0088,  ...,  0.0115,  0.0116,  0.0114],
        [ 0.0080,  0.0115,  0.0018,  ...,  0.0115,  0.0115,  0.0115],
        ...,
        [ 0.0018,  0.0115,  0.0003,  ...,  0.0115,  0.0114,  0.0115],
        [ 0.0028,  0.0115,  0.0258,  ...,  0.0115,  0.0115,  0.0115],
        [ 0.0134,  0.0115,  0.0113,  ...,  0.0114,  0.0116,  0.0115]])
New data:
Correct one

  Output_:  tensor([[-1.4668e+00, -2.0050e-02,  9.0991e+00,  ..., -2.9674e-02,
         -2.9316e-02,  1.0919e-03],
        [-1.8659e+00, -1.9814e-02,  1.0280e+01,  ..., -3.0707e-02,
         -2.8495e-02,  6.1653e-04],
        [-1.7792e+00, -1.9904e-02,  1.0180e+01,  ..., -2.8837e-02,
         -2.9013e-02,  4.4281e-04],
        ...,
        [-1.9254e+00, -1.9956e-02,  1.0030e+01,  ..., -3.1017e-02,
         -2.8090e-02,  1.2064e-03],
        [-1.8901e+00, -1.9833e-02,  1.0349e+01,  ..., -3.0692e-02,
         -2.8263e-02,  5.9519e-04],
        [-1.6982e+00, -1.9683e-02,  9.8032e+00,  ..., -3.5249e-02,
         -3.0903e-02,  7.9714e-04]])
Output_:  tensor([[-2.5157e+00, -1.6324e-02,  9.1139e+00,  ..., -3.2007e-02,
         -2.9580e-02, -1.4472e-03],
        [-2.8347e+00, -1.6084e-02,  1.0266e+01,  ..., -3.3203e-02,
         -3.0101e-02, -1.5995e-03],
        [-2.7185e+00, -1.6169e-02,  1.0148e+01,  ..., -3.2599e-02,
         -3.0202e-02, -1.5616e-03],
        ...,
        [-2.8263e+00, -1.6185e-02,  9.9559e+00,  ..., -3.2756e-02,
         -2.9342e-02, -1.6039e-03],
        [-2.8152e+00, -1.6107e-02,  1.0214e+01,  ..., -3.3221e-02,
         -2.9788e-02, -1.5131e-03],
        [-2.6045e+00, -1.6059e-02,  1.0158e+01,  ..., -3.6529e-02,
         -3.2433e-02, -2.6428e-03]])
Output_:  tensor([[-3.1261e+00, -1.3343e-02,  7.4427e+00,  ..., -3.2269e-02,
         -2.8426e-02, -3.8473e-03],
        [-3.4080e+00, -1.3129e-02,  8.5268e+00,  ..., -3.3101e-02,
         -2.9385e-02, -3.9932e-03],
        [-3.3049e+00, -1.3224e-02,  8.3361e+00,  ..., -3.2994e-02,
         -2.9269e-02, -3.8154e-03],
        ...,
        [-3.3685e+00, -1.3194e-02,  8.2327e+00,  ..., -3.2585e-02,
         -2.8779e-02, -4.1984e-03],
        [-3.3625e+00, -1.3162e-02,  8.3770e+00,  ..., -3.3151e-02,
         -2.9011e-02, -3.8266e-03],
        [-3.2790e+00, -1.3095e-02,  8.7813e+00,  ..., -3.5329e-02,
         -3.1717e-02, -5.4507e-03]])
Output_:  tensor([[-3.4367e+00, -1.1330e-02,  5.5151e+00,  ..., -3.1649e-02,
         -2.7239e-02, -5.6058e-03],
        [-3.7001e+00, -1.1140e-02,  6.5096e+00,  ..., -3.2087e-02,
         -2.8347e-02, -5.8296e-03],
        [-3.6076e+00, -1.1243e-02,  6.2609e+00,  ..., -3.2162e-02,
         -2.8125e-02, -5.5908e-03],
        ...,
        [-3.6545e+00, -1.1182e-02,  6.2548e+00,  ..., -3.1693e-02,
         -2.7950e-02, -6.0792e-03],
        [-3.6386e+00, -1.1183e-02,  6.2885e+00,  ..., -3.2163e-02,
         -2.7919e-02, -5.6188e-03],
        [-3.7059e+00, -1.1070e-02,  7.0189e+00,  ..., -3.3440e-02,
         -3.0643e-02, -7.3441e-03]])
Epoch: 100%|¦¦¦¦¦¦¦¦¦¦| 1/1 [01:09<00:00, 69.34s/it]
Output_:  tensor([[-3.5736e+00, -1.0082e-02,  3.9081e+00,  ..., -3.0809e-02,
         -2.6334e-02, -6.7942e-03],
        [-3.8260e+00, -9.9113e-03,  4.8144e+00,  ..., -3.0951e-02,
         -2.7490e-02, -7.1017e-03],
        [-3.7374e+00, -1.0014e-02,  4.5313e+00,  ..., -3.1085e-02,
         -2.7223e-02, -6.8528e-03],
        ...,
        [-3.7872e+00, -9.9392e-03,  4.5991e+00,  ..., -3.0691e-02,
         -2.7252e-02, -7.3382e-03],
        [-3.7551e+00, -9.9614e-03,  4.5439e+00,  ..., -3.1042e-02,
         -2.7018e-02, -6.8707e-03],
        [-3.9564e+00, -9.8048e-03,  5.4775e+00,  ..., -3.1647e-02,
         -2.9702e-02, -8.5275e-03]])
epoch      trn_loss   val_loss   
    0      4.675029   6.643191  
Output_:  tensor([[-1.4668e+00, -2.0050e-02,  9.0991e+00,  ..., -2.9674e-02,
         -2.9316e-02,  1.0919e-03],
        [-1.8659e+00, -1.9814e-02,  1.0280e+01,  ..., -3.0707e-02,
         -2.8495e-02,  6.1653e-04],
        [-1.7792e+00, -1.9904e-02,  1.0180e+01,  ..., -2.8837e-02,
         -2.9013e-02,  4.4281e-04],
        ...,
        [-1.9254e+00, -1.9956e-02,  1.0030e+01,  ..., -3.1017e-02,
         -2.8090e-02,  1.2064e-03],
        [-1.8901e+00, -1.9833e-02,  1.0349e+01,  ..., -3.0692e-02,
         -2.8263e-02,  5.9519e-04],
        [-1.6982e+00, -1.9683e-02,  9.8032e+00,  ..., -3.5249e-02,
         -3.0903e-02,  7.9714e-04]])
Output_:  tensor([[-2.5157e+00, -1.6324e-02,  9.1139e+00,  ..., -3.2007e-02,
         -2.9580e-02, -1.4472e-03],
        [-2.8347e+00, -1.6084e-02,  1.0266e+01,  ..., -3.3203e-02,
         -3.0101e-02, -1.5995e-03],
        [-2.7185e+00, -1.6169e-02,  1.0148e+01,  ..., -3.2599e-02,
         -3.0202e-02, -1.5616e-03],
        ...,
        [-2.8263e+00, -1.6185e-02,  9.9559e+00,  ..., -3.2756e-02,
         -2.9342e-02, -1.6039e-03],
        [-2.8152e+00, -1.6107e-02,  1.0214e+01,  ..., -3.3221e-02,
         -2.9788e-02, -1.5131e-03],
        [-2.6045e+00, -1.6059e-02,  1.0158e+01,  ..., -3.6529e-02,
         -3.2433e-02, -2.6428e-03]])
Output_:  tensor([[-3.1261e+00, -1.3343e-02,  7.4427e+00,  ..., -3.2269e-02,
         -2.8426e-02, -3.8473e-03],
        [-3.4080e+00, -1.3129e-02,  8.5268e+00,  ..., -3.3101e-02,
         -2.9385e-02, -3.9932e-03],
        [-3.3049e+00, -1.3224e-02,  8.3361e+00,  ..., -3.2994e-02,
         -2.9269e-02, -3.8154e-03],
        ...,
        [-3.3685e+00, -1.3194e-02,  8.2327e+00,  ..., -3.2585e-02,
         -2.8779e-02, -4.1984e-03],
        [-3.3625e+00, -1.3162e-02,  8.3770e+00,  ..., -3.3151e-02,
         -2.9011e-02, -3.8266e-03],
        [-3.2790e+00, -1.3095e-02,  8.7813e+00,  ..., -3.5329e-02,
         -3.1717e-02, -5.4507e-03]])
Output_:  tensor([[-3.4367e+00, -1.1330e-02,  5.5151e+00,  ..., -3.1649e-02,
         -2.7239e-02, -5.6058e-03],
        [-3.7001e+00, -1.1140e-02,  6.5096e+00,  ..., -3.2087e-02,
         -2.8347e-02, -5.8296e-03],
        [-3.6076e+00, -1.1243e-02,  6.2609e+00,  ..., -3.2162e-02,
         -2.8125e-02, -5.5908e-03],
        ...,
        [-3.6545e+00, -1.1182e-02,  6.2548e+00,  ..., -3.1693e-02,
         -2.7950e-02, -6.0792e-03],
        [-3.6386e+00, -1.1183e-02,  6.2885e+00,  ..., -3.2163e-02,
         -2.7919e-02, -5.6188e-03],
        [-3.7059e+00, -1.1070e-02,  7.0189e+00,  ..., -3.3440e-02,
         -3.0643e-02, -7.3441e-03]])
Output_:  tensor([[-3.5736e+00, -1.0082e-02,  3.9081e+00,  ..., -3.0809e-02,
         -2.6334e-02, -6.7942e-03],
        [-3.8260e+00, -9.9113e-03,  4.8144e+00,  ..., -3.0951e-02,
         -2.7490e-02, -7.1017e-03],
        [-3.7374e+00, -1.0014e-02,  4.5313e+00,  ..., -3.1085e-02,
         -2.7223e-02, -6.8528e-03],
        ...,
        [-3.7872e+00, -9.9392e-03,  4.5991e+00,  ..., -3.0691e-02,
         -2.7252e-02, -7.3382e-03],
        [-3.7551e+00, -9.9614e-03,  4.5439e+00,  ..., -3.1042e-02,
         -2.7018e-02, -6.8707e-03],
        [-3.9564e+00, -9.8048e-03,  5.4775e+00,  ..., -3.1647e-02,
         -2.9702e-02, -8.5275e-03]])

predts = wgt_enc.max(0)[1]

authentication sasl evaluate code authentication keyspace add entry evaluate code code code is all code all evaluate code from from equals keyspace keyspace evaluate code keyspace evaluate keyspace entry keyspace _eos_ user escape authentication roles authentication primary function user is all _bos_ evaluate keyspace properties protected entry resources roles authentication keyspace entries keyspace roles list table protected keyspace authorize user entries interval response keyspace keyspace auth response keyspace user authenticated all for primary add list cache _eos_ user is response keyspace keyspace evaluate authorize keyspace evaluate keyspace code all revoke keyspace revoke is keyspace get user keyspace keyspace table get from response response evaluate is drop keyspace _eos_ max string get evaluate revoke revoke cache revoke keyspace response lookup all interval authorize all all legacy authentication _eos_ name equals keyspace resources all table get response all user revoke all user all all evaluate code keyspace revoke authentication _bos_ all code cache user authentication user all code setup response keyspace protected legacy process keyspace _eos_ entries code is keyspace revoke user response process evaluate user keyspace user add abort set all prepare keyspace from existing keyspace modify get roles response user parse table keyspace system all entry from entries query authorization primary is response is keyspace keyspace is user _eos_ code evaluate is protected evaluate revoke protected all authorize keyspace update entries evaluate keyspace user evaluate all from is for evaluate evaluate complete all user user all protected revoke keyspace revoke evaluate evaluate is all execute user keyspace code user protected authenticate roles evaluate keyspace authentication all revoke all auth max _bos_ keyspace user revoke update all all protected add keyspace all keyspace get authorize is _bos_ response execute all evaluate response keyspace code authorize authentication keyspace clean evaluate prepare keyspace roles evaluate keyspace response evaluate keyspace

param11
got logged keyword
